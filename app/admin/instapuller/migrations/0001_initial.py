# Generated by Django 4.2.2 on 2023-06-19 09:44

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата останнього оновлення')),
                ('account_id', models.BigAutoField(db_column='account_id', primary_key=True, serialize=False, verbose_name='ID Акаунту')),
                ('username', models.CharField(max_length=255, verbose_name='Юзернейм')),
                ('password', models.CharField(blank=True, help_text='не потрібний для акаунтів типу "для парсингу"', max_length=255, null=True, verbose_name='Пароль')),
                ('auth_key', models.CharField(blank=True, help_text='без пробілів, не потрібний для акаунтів типу "для парсингу"', max_length=255, null=True, verbose_name='Ключ двоетапної перевірки')),
                ('limit', models.IntegerField(default=25, verbose_name='Ліміт публікацій в день')),
                ('free_action', models.IntegerField(default=25, help_text='рахується автоматично', verbose_name='К-ть вільний дій')),
                ('type', models.CharField(choices=[('TECHNICAL', 'Технічний'), ('PARSING', 'Для париснгу'), ('POSTING', 'Для публікації')], default='POSTING', verbose_name='Тип акаунту')),
                ('status', models.CharField(choices=[('ACTIVE', 'Активний'), ('BANNED', 'Проблеми зі входом'), ('PAUSE', 'На паузі'), ('UNPAID', 'Не оплачений')], default='ACTIVE', verbose_name='Статус акаунту')),
                ('subscript_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата останьої оплати підписки')),
                ('subscript_days', models.IntegerField(default=30, verbose_name='Кількість днів у підписці')),
            ],
            options={
                'verbose_name': 'акаунт',
                'verbose_name_plural': 'акаунти',
                'db_table': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата останнього оновлення')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Функції')),
                ('tag', models.CharField(editable=False, max_length=50, unique=True)),
                ('name', models.CharField(editable=False, max_length=50, verbose_name='Назва')),
                ('description', models.CharField(max_length=510, verbose_name='Опис')),
                ('status', models.CharField(choices=[('ACTIVE', 'Активна'), ('PAUSED', 'Пауза')], default='PAUSED', help_text='змініть для того щоб зупинити або запустити виконання функції', verbose_name='Статус виконання')),
                ('minutes', models.IntegerField(default=1, help_text='період активації функції', verbose_name='Хвилини')),
                ('seconds', models.IntegerField(default=0, help_text='період активації функції, додаються до хвилин', verbose_name='Секунди')),
                ('job_id', models.CharField(editable=False, help_text='технічна інформація про функцію', max_length=40, null=True, verbose_name='Job ID')),
            ],
            options={
                'verbose_name': 'функція',
                'verbose_name_plural': 'функції',
                'db_table': 'functions',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата останнього оновлення')),
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='Телеграм ID користувача')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name="Ім'я користувача")),
                ('status', models.CharField(choices=[('ACTIVE', 'Підписка'), ('TRIAL', 'Пробний')], default='TRIAL', verbose_name='Тарифний план')),
            ],
            options={
                'verbose_name': 'користувач',
                'verbose_name_plural': 'користувачі',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата останнього оновлення')),
                ('work_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID Завдання')),
                ('mode', models.CharField(choices=[('ALL', 'Всі пости'), ('ONLY_NEW', 'Тільки нові пости'), ('ALL_AND_NEW', 'Всі та нові пости'), ('LAST_N', 'Останні X постів')], default='LAST_N')),
                ('status', models.CharField(choices=[('ALL', 'Всі пости'), ('ONLY_NEW', 'Тільки нові пости'), ('ALL_AND_NEW', 'Всі та нові пости'), ('LAST_N', 'Останні X постів')], default='ACTIVE', verbose_name='Статус завдання')),
                ('mediacount', models.BigIntegerField(default=0, help_text='рахується автоматично при парсингу, не рекомендується змінювати', verbose_name='Кількість постів на акаунті')),
                ('limit', models.IntegerField(default=0, help_text='Тільки для завдання типу "Останні X постів"', verbose_name='X постів для скачування')),
                ('customer_id', models.ForeignKey(db_column='customer_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='work_customer_id', to='instapuller.account', verbose_name='Акаунт на який публікуються пости')),
                ('executor_id', models.ForeignKey(db_column='executor_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='work_executor_id', to='instapuller.account', verbose_name='Акаунт з якого скачуются пости')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='instapuller.user', verbose_name='Власник')),
            ],
            options={
                'verbose_name': 'завдання',
                'verbose_name_plural': 'завдання',
                'db_table': 'works',
            },
        ),
        migrations.CreateModel(
            name='Proxy',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата останнього оновлення')),
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False, verbose_name='ID Проксі')),
                ('host', models.CharField(max_length=100, verbose_name='Хост')),
                ('port', models.CharField(max_length=10, verbose_name='Порт')),
                ('type', models.CharField(help_text='доступні варіанти socks5, https, http', max_length=100, verbose_name='Тип')),
                ('login', models.CharField(blank=True, help_text='для проксі з авторизацією', max_length=100, null=True, verbose_name='Юзернейм')),
                ('password', models.CharField(blank=True, help_text='для проксі з авторизацією', max_length=100, null=True, verbose_name='Пароль')),
                ('valid', models.BooleanField(choices=[(True, 'Працює'), (False, 'Не працює')], default=False, verbose_name='Статус')),
                ('reboot_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Посилання на перезавантаженя')),
                ('last_using_date', models.DateTimeField(default=datetime.datetime(2023, 6, 19, 12, 44, 1, 412223), verbose_name='Дата останнього використання')),
                ('function_id', models.ForeignKey(db_column='function_id', help_text='оберіть в якій функції буде використовуватись проксі', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prox_function_id', to='instapuller.function', verbose_name='Функція')),
            ],
            options={
                'verbose_name': 'проксі',
                'verbose_name_plural': 'проксі',
                'db_table': 'proxies',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата останнього оновлення')),
                ('post_id', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Інстаграм ID поста')),
                ('status', models.CharField(choices=[('ACTIVE', 'Активний'), ('PLAN_DOWNLOAD', 'Планується скачування'), ('LOADING', 'Завантажується'), ('PLAN_PUBLIC', 'Планується публікація'), ('WAIT_PUBLIC', 'Очкікує на публікацію'), ('DONE', 'Опублікований'), ('PAUSE', 'Поставлений на паузу')], default='ACTIVE', verbose_name='Статус поста')),
                ('caption', models.CharField(blank=True, max_length=2200, null=True, verbose_name='Текст до поста')),
                ('mediacount', models.IntegerField(default=0, help_text='автоматично рахується при скачуванні, не рекомендується редагувати', verbose_name='Кількість медіа в пості')),
                ('job_id', models.CharField(editable=False, help_text='технічна інформація про заплановану подію (скачування/публікація)', max_length=40, null=True, verbose_name='Job ID')),
                ('customer_id', models.ForeignKey(db_column='customer_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_customer_id', to='instapuller.account', verbose_name='Акаунт на який публікується пост')),
                ('executor_id', models.ForeignKey(db_column='executor_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_executor_id', to='instapuller.account', verbose_name='Акаунт з якого скачуєтся пост')),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='instapuller.user', verbose_name='Власник')),
                ('work_id', models.ForeignKey(db_column='work_id', help_text='визначається автоматично, можна редагувати', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_work_id', to='instapuller.work', verbose_name='Завдання')),
            ],
            options={
                'verbose_name': 'пост',
                'verbose_name_plural': 'пости',
                'db_table': 'posts',
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата останнього оновлення')),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID Помилки')),
                ('name', models.CharField(max_length=150, verbose_name='Джерело')),
                ('description', models.CharField(verbose_name='Опис помилки')),
                ('job_id', models.CharField(editable=False, help_text='технічна інформація про роботу в якій виникла помилка', max_length=40, null=True, verbose_name='Job ID')),
                ('screenshot', models.CharField(max_length=255, null=True, verbose_name='Скріншот')),
                ('customer_id', models.ForeignKey(db_column='customer_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='err_customer_id', to='instapuller.account', verbose_name='Акаунт на який публікується пост')),
                ('executor_id', models.ForeignKey(db_column='executor_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='err_executor_id', to='instapuller.account', verbose_name='Акаунт з якого скачуєтся пост')),
                ('post_id', models.ForeignKey(db_column='post_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='instapuller.post', verbose_name='Пост')),
                ('proxy_id', models.ForeignKey(db_column='proxy_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='instapuller.proxy', verbose_name='Проксі')),
                ('technical_id', models.ForeignKey(db_column='technical_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='instapuller.account', verbose_name='Акаунт який виконував технічну роботу')),
                ('work_id', models.ForeignKey(db_column='work_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='instapuller.work', verbose_name='Завдання')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='account',
            name='user_id',
            field=models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='instapuller.user', verbose_name='Власник'),
        ),
    ]
